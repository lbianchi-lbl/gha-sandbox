name: Integration

on:
  pull_request:
    types: [labeled, synchronize]
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

jobs:
  precheck:
    name: (util) Check if should run
    runs-on: ubuntu-20.04
    if: >-
      (
        (
          github.event.action == 'labeled'
          && contains(github.event.label.description, 'triggers_workflow')
          && contains(github.event.label.description, github.workflow)
        )
        || (
          github.event.action == 'submitted'
          && github.event.review.state == 'APPROVED'
        )
        || github.event.action == 'synchronize'
        || !contains(github.event_name, 'pull_request')
      )
    outputs:
      is-pr-approved: ${{ steps.check-pr-approval.outputs.is-approved }}
      workflow-trigger: ${{ steps.set-outputs.outputs.workflow-trigger }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/display-debug-info
      - id: check-pr-approval
        uses: ./.github/actions/check-if-approved
        if: contains(github.event_name, 'pull_request')
        with:
          number: ${{ github.event.pull_request.number }}
      - name: Show precheck output
        run: |
          jq . <<EOF
          ${{ toJSON(steps) }}
          EOF
          echo "steps.check-pr-approval.outputs.is-approved=${{ steps.check-pr-approval.outputs.is-approved }}"
          echo "is_pr_approved=${{ steps.check-pr-approval.outputs.is-approved }}" >> $GITHUB_ENV
      - id: set-outputs
        env:
          _GITHUB_EVENT_ACTION: ${{ github.event.action }}
        shell: python {0}
        run: |
          import json
          from os import environ as env

          def _display(msg):
              print(f'::warning ::{msg}')
          def _set_output(name, val):
              print(f'::set-output name={name}::{val}')

          event_name = env["GITHUB_EVENT_NAME"]
          event_action = env["_GITHUB_EVENT_ACTION"]
          is_pr = 'pull_request' in event_name.lower()
          is_pr_approved = json.loads(env.get("is_pr_approved") or "null")

          workflow_trigger = 'undetermined'

          if is_pr:
              if event_action == 'labeled':
                  workflow_trigger = 'user_dispatch'
              elif is_pr_approved is True:
                  workflow_trigger = 'approved_pr'
              elif is_pr_approved is False:
                  workflow_trigger = 'unapproved_pr'
          else:
              workflow_trigger = 'not_pr'

          msg = f'{workflow_trigger=}    event/action={event_name}/{event_action or "N/A"}    is_pr_approved={is_pr_approved or "N/A"}'
          _display(msg)
          _set_output('workflow-trigger', workflow_trigger)
  debug_precheck:
    name: (util) Debug precheck job
    runs-on: ubuntu-latest
    needs: precheck
    steps:
      - name: Show precheck output
        run: |
          jq . <<EOF
          ${{ toJSON(needs.precheck.outputs) }}
          EOF
          echo "precheck.outputs.is-pr-approved=${{ needs.precheck.outputs.is-pr-approved }}"
          echo "precheck.outputs.workflow-trigger=${{ needs.precheck.outputs.workflow-trigger }}"
      - name: Test if condition
        if: >-
          (
            needs.precheck.outputs.workflow-trigger == 'user_dispatch'
            || needs.precheck.outputs.workflow-trigger == 'not_pr'
            || needs.precheck.outputs.workflow-trigger == 'approved_pr'
          )
        run: echo "If I'm running, the main job should be running as well"
  debug_label:
    name: (util) Debug label triggers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/display-debug-info
      - name: Test label condition
        if: >-
          (
            github.event.action == 'labeled'
            && contains(github.event.label.description, 'triggers_workflow')
            && contains(github.event.label.description, github.workflow)
          )
        run: echo "${{ github.event.label.description }}"
#
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [precheck]
    if: >-
      (
        needs.precheck.outputs.workflow-trigger == 'user_dispatch'
        || needs.precheck.outputs.workflow-trigger == 'not_pr'
        || needs.precheck.outputs.workflow-trigger == 'approved_pr'
      )
    steps:
      - name: Wait a bit
        run: sleep 60; echo "Done!"
